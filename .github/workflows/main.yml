name: PHP Granular Pipeline

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:

jobs:
  # Job 1: Build & Install Dependencies
  # This job ensures the project is installable and warms up the cache for subsequent jobs.
  build:
    name: üèóÔ∏è Build & Install
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-22.04]
        php-versions: ['8.4']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          tools: composer:v2

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-php-${{ matrix.php-versions }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php-versions }}-composer-

      - name: Install dependencies with Composer
        run: composer install --no-progress --prefer-dist --optimize-autoloader

  # Job 2: Linter (runs in parallel with other analysis jobs)
  mago_lint:
    name: üé® Linter (Mago Lint)
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-22.04]
        php-versions: ['8.4']
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          tools: composer:v2
      - name: Cache and Install (will be fast)
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-php-${{ matrix.php-versions }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php-versions }}-composer-
      - run: composer install --no-progress --prefer-dist
      - name: Run Mago Lint
        run: vendor/bin/mago lint --reporting-format=github

  # Job 3: Static Analysis (runs in parallel with other analysis jobs)
  mago_analyze:
    name: üî¨ Static Analysis (Mago Analyze)
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-22.04]
        php-versions: ['8.4']
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          tools: composer:v2
      - uses: actions/cache@v4
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-php-${{ matrix.php-versions }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php-versions }}-composer-
      - run: composer install --no-progress --prefer-dist
      - name: Run Mago Analyze
        run: vendor/bin/mago analyze --reporting-format=github

  # Job 4: Security Scan (runs in parallel with other analysis jobs)
  security_scan:
    name: üõ°Ô∏è Security Scan (SCA & SAST)
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-22.04]
        php-versions: ['8.4']
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          tools: composer:v2
      - uses: actions/cache@v4
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-php-${{ matrix.php-versions }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php-versions }}-composer-
      - run: composer install --no-progress --prefer-dist
      - name: Audit Composer dependencies (SCA)
        run: composer audit
      - name: Run Taint Analysis (SAST)
        run: vendor/bin/psalm --taint-analysis

  # Job 5: Unit Tests (runs only after all analysis jobs have passed)
  unit_tests:
    name: üß™ Tests (PHP ${{ matrix.php-versions }})
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-22.04]
        php-versions: ['8.4']
    needs: [mago_lint, mago_analyze, security_scan]
    if: failure() || success()
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: gd, pgsql, pdo_mysql, pdo_pgsql, gmp, fileinfo, intl, opcache, xml, iconv, redis, mailparse
          coverage: xdebug
          tools: composer:v2
      - uses: actions/cache@v4
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-php-${{ matrix.php-versions }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php-versions }}-composer-
      - run: composer install --no-progress --prefer-dist
      - name: Run PHPUnit tests
        run: vendor/bin/phpunit --coverage-clover ./var/data/phpunit-coverage/clover.xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./var/data/phpunit-coverage/clover.xml
        # It's often best to upload coverage from only one job.
        if: matrix.php-versions == '8.4'
